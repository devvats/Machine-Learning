import numpy as np

def find_theta(x, y,itere, alpha,in_t):
   
    m = np.size(x)
 
    
    t = in_t
    x1 = np.ones((2, n))
    x1[2,:] = x
    
    for i in range(o , itere):
        t = t - ((alpha/m)*(((t*x1)-y)*np.transpose(x1)))
    return(t)

def costfunc(x,y,theta):
    J =  (np.sum(((t*x1)-y)))/(2*m)
    return(J)

def main():
    
    x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
    y = np.array([1, 3, 2, 5, 7, 8, 8, 9, 10, 12])
 
    theta = np.array([0,0])
    alpha = 0.01
    iterations = 1000

    cost = costfunc(x,y,theta)
    print(cost)

    new_theta = find_theta(x,y,iterations , alpha , theta)
    print(new_theta)
